#include<iostream>
 
using namespace std;
 //先手总能通过操作把奇数台阶异或值为0的局面留给后手，一直循环这两种局面，先手面临的是奇数台阶异或值不为0的局面，
 //后手面临的是奇数台阶异或值为0的局面。但是一定会有终止时刻，当奇数台阶全为0时，只留下偶数台阶上有石子。
 //只有偶数存在石子是只需将后手移动的偶数阶向下移即可
 //因为偶数台阶上的石子要想移动到地面，必然需要经过偶数次移动，又因为奇数台阶全0的情况是留给后手的，因此先手总是可以将石子移动到地面，
 //当将最后一个（堆）石子移动到地面时，后手无法操作，即后手失败

int main()
{
	int n;
	cin >> n;
	int res = 0;
	for(int i = 1; i <= n; i ++)
	{
		int a;
		cin >> a;
		if(i % 2)res ^= a;
	}
	//赢： 轮到你时奇数阶台阶上石子个数异或不为0，你操作一定有办法可以使得他们为0，
	if(res) puts("Yes");// 那么最后 0 0的局面就会让对手哦碰到 
	else puts("No");
	
	return 0;
}